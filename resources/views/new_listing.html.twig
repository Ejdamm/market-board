{% extends 'templates/base.html.twig' %}

{% block content %}
  <form method="post">
    <div class="form-group">
      <label for="category_dropdown">{{ language.category }}</label>
      <select class="form-control" id="category_dropdown" name="category_id" required>
        <option value="0">{{ language.choose_category }}</option>
        {% for category in categories %}
          <option value="{{ category.id }}" class="{{ category.category_name }}" {% if category.id == params.category_id %}selected{% endif %}>{{ category.category_name }}</option>
        {% endfor %}
      </select>
    </div>
    <div class="form-group">
      <label for="subcategory_dropdown">{{ language.subcategory }}</label>
      <select class="form-control" id="subcategory_dropdown" name="subcategory_id" required>
        <option value="0">{{ language.choose_subcategory }}</option>
        {% for subcategory in subcategories %}
          <option value="{{ subcategory.id }}" class="{{ subcategory.category_name }}" {% if subcategory.id == params.subcategory_id %}selected{% endif %}>{{ subcategory.subcategory_name }}</option>
        {% endfor %}
      </select>
    </div>
    <div class="form-group">
      <label for="new_listing_title">{{ language.listing_title }}</label>
      <input type="text" class="form-control" id="new_listing_title" value="{{ params.title }}" placeholder="{{ language.enter_title }}" name="title" maxlength="40" required>
    </div>
    <div class="form-group">
      <label for="new_listing_email">{{ language.email_address }}</label>
      <input type="email" class="form-control" id="new_listing_email" value="{{ params.email }}" placeholder="{{ language.enter_your_email }}" name="email" required>
    </div>
    <div class="form-group">
      <label for="new_listing_price">{{ language.unit_price }}</label>
      <input type="number" class="form-control" id="new_listing_price" value="{{ params.unit_price }}" placeholder="{{ language.enter_unit_price }}" name="unit_price" required>
    </div>
    <div class="form-group">
      <label for="new_listing_amount">{{ language.quantity }}</label>
      <input type="number" class="form-control" id="new_listing_amount" placeholder="{{ language.enter_quantity }}" name="quantity" value={% if params is defined %}{{ params.quantity }}{% else %}1{% endif %} min="1" required>
    </div>
    <div class="form-group">
      <label for="new_listing_description">{{ language.description }}</label>
      <textarea class="form-control" id="new_listing_description" name="description" rows="4">{{ params.description }}</textarea>
    </div>

    <div class="form-group">
      <label for="new_listing_captcha">{{ language.captcha }}</label>
      <input type="text" class="form-control" id="new_listing_captcha" placeholder="{{ language.enter_captcha }}" name="captcha" required>
    </div>
    <img alt="captcha_image" src="{{ captcha }}" />

    <button type="submit" class="btn btn-primary float-right">{{ language.create_listing }}</button>
  </form>

  <!-- query to filter second dropdown -->
  <!-- https://stackoverflow.com/a/20478291/5318606-->
  <script >
  $(document).ready(function () {
      let subCatOptions = $('#subcategory_dropdown option');

      // Subcategory filtering depending on category
      $('#category_dropdown').change(function () {
          let selectedSubcategory = $('#subcategory_dropdown option:selected');
          let selectedCategory = $('#category_dropdown option:selected');
          filterSubCategoryOptions(subCatOptions, selectedCategory);
          if (selectedSubcategory.prop('class') === selectedCategory.prop('class') || selectedCategory.prop('value') === "0") {
              $('#subcategory_dropdown option[value=' + selectedSubcategory.prop('value') + ']').prop('selected', true);
          } else {
              $('#subcategory_dropdown option[value=0]').prop('selected', true);
          }
      });

      // Subcategory filtering depending on subcategory
      $('#subcategory_dropdown').change(function () {
          let selectedSubCategory = $('#subcategory_dropdown option:selected');
          let selectedCategory = $('#category_dropdown option:selected');

          // Make sure the category corresponds to chosen subcategory
          if (selectedCategory.prop('class') !== selectedSubCategory.prop('class')) {
              $('#category_dropdown .' + selectedSubCategory.prop('class')).prop('selected', true);
          }

          // Since we changed the category we can remove the subcategories not belonging to that category
          filterSubCategoryOptions(subCatOptions, selectedCategory);
          // Reselect the selected option because it was lost in the filtering
          selectedSubCategory.prop('selected', true);
      });
  });

  function filterSubCategoryOptions(options, selectedCategory){
      // Always reset subcategory options
      $('#subcategory_dropdown').append(options);

      if (selectedCategory.prop('value') !== "0") {
          // Remove all options which are not the default option or belonging to categoryClass
          $('#subcategory_dropdown :not(.' + selectedCategory.prop('class') + ',option[value="0"])').remove();
      }
  }
  </script>

{% endblock %}

